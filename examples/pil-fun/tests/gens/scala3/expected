-------------------


@main
def mxabven(): Unit = {
  if 5 == (5 + (-(0))) then {
    val tf = 0 * (6.*(-(1)))
    if 4 <= (0 * tf) then {
      Console.println((-(tf)).+(tf.+(tf)))
      var f = (tf * tf).<(-(tf))
      var wr = (1.*(tf)).*(0)
      
    } else {
      Console.println(tf.*(5))
      var mrbrhdz = 6.<=(tf)
      
    }
    
  } else {
    if (1.*(3)) <= (2 * (-(4))) then
      if (-(4)).<=(4) then
        var r = 5.*(-(0))
        r = (r.*(3)).+(3.*(-(2)))
        def tjrqayady(): Unit = {  } 
        
      else
        Console.println((-(1)).*(0))
        Console.println(3.+(6))
        Console.println(6 * (2.*(0)))
        
      if (5.*(0)).==(-(-(0))) then {
        def d(kxdesz: Int): Boolean = { (2.*(kxdesz)).<(kxdesz) } 
        if true then
          {}
        
      } else {
        val lgq = () => {
          Console.println((-(0)) * (5 + 5))
          (3.*(5)) * (0.*(-(4)))
        } 
        
      }
      if (5 + 1).<(0.+(-(4))) then
        var ecstskwc = -(1)
        
      
    else
      Console.println(-(0.*(0)))
      val kpflaw = () => {
        val maucooudje = (kjmgd: Boolean) => {
          Console.println(0)
          5 == 0
        } : Boolean
        var n: Boolean = (4 * 6) < (-(-(0)))
        6 < (5.+(1))
      } 
      val siqbyspi = 2 * (0.*(-(1)))
      def goxf(ls: Boolean, jkmqo: Int, ebcvu: Int, igtl: Boolean): Boolean =
        (siqbyspi + jkmqo) <= siqbyspi 
      
    Console.println((-(3)) * (3 * 4))
    extension (ncsohx: Int)
      def uhdoupe(dmluimy: Int, wjqswe: Int, uoakk: Int): Unit = {
        val ui = (sz: Boolean, q: Int, naap: Int, vrwvfcwhr: Int, hzccdmhcdv: Int) => { {} } : Unit
        val uq = false
        
      } 
    if (-(5)) < (3 * 5) then
      (-(1)).uhdoupe(1, -(-(3)), -(-(6)))
      
    else
      Console.println(0.*(-(0)))
      
    var zekejqaa: Int = (6 * 3) * 4
    
  }
  extension (t: Int)
    def sddxyv(dckmfvua: Boolean): Int = {
      var iqa: Boolean = (4.*(t)).==(2.+(-(t)))
      if 3.<=(5 * t) then {
        def yhnsqvowfw(p: Boolean, xiyxlczips: Int, fomeafnb: Boolean, m: Int, fobjrlx: Boolean): Int = {
          iqa = 1 < xiyxlczips
          xiyxlczips.*(2)
        } 
        
      } else {
        if (t * 1) == 5 then
          {}
        else
          if (t * t) < 0 then
            {}
          
        iqa = (t.*(t)) <= (1.+(3))
        
      }
      iqa = false
      Console.println(-(t))
      (1 * t) + 0
    } : Int
  var frfrcplgc: Boolean = false
  val cjyctb = (f: Int, thbnpylisr: Boolean, bh: Int, yecrte: Boolean, yv: Int) => {
    if (f sddxyv true) <= f then {
      if f < 6 then
        {}
      
    } else {
      frfrcplgc = 1.<=(3 sddxyv true)
      
    }
    frfrcplgc = (f.sddxyv(yecrte)).<(-(4))
    
  } : Unit
  cjyctb(2, true, 3 sddxyv false, true, (-(1)).sddxyv(6 < 6))
  cjyctb(6, frfrcplgc, 4.*(6), 1 < (-(2)), 5 * (4.sddxyv(true)))
  
}
-------------------


@main
def cereaqyqm(): Unit = {
  
}
-------------------

val as = (wyjtdach: Int, citkxch: Int) => {
  var mafhfcz: Int = 4 * (wyjtdach.*(wyjtdach))
  Console.println(0)
  var dgzjapwd: Int = (4 * citkxch) * (-(mafhfcz))
  var gptfihqq = dgzjapwd == 2
  def xea(lwgy: Int, fk: Boolean, ebuzmaxik: Int): Int =
    mafhfcz * (lwgy.*(-(3))) 
  (4.*(citkxch)) < mafhfcz
} : Boolean

@main
def xgriaerel(): Unit = {
  if 4.<=(0) then {
    extension (ey: Int)
      def hn(nlyh: Int, rjpl: Int, dhrkgbjthb: Int) = {
        Console.println(nlyh)
        extension (qvdjtkfnp: Boolean)
          def pgjcjhr(ruildzy: Int, eg: Boolean) =
            if qvdjtkfnp then {
              
            } else {
              
            }
             
        var mbkdwkxnx = rjpl * (rjpl.*(4))
        
      } 
    def ffmlvduuc(jg: Boolean, w: Int, hatf: Boolean, xirzqm: Boolean): Unit =
      val bmxvh = (3 + 0) < 3
      Console.println(w.*(w))
       
    extension (usqeb: Boolean)
      def l() =
        false 
    val ymvgfk: Int = (1.*(3)) + (3.*(2))
    
  } else {
    Console.println(4)
    extension (ioslk: Int)
      def locn(sbkgvrr: Boolean) =
        if (6.*(ioslk)) <= ioslk then
          var afzbzyduo: Int = 0
          
        else
          Console.println(6.*(0))
          
        Console.println((-(ioslk)) * (-(3)))
        false 
    extension (yasirs: Boolean)
      def msbjwiad(): Unit = {
        extension (ctx: Boolean)
          def ie(e: Boolean, yg: Boolean, y: Boolean, svvs: Boolean): Boolean =
            (5.*(5)).locn(1.locn(yg)) 
        
      } 
    if as(2 + 4, 2 + (-(0))) then {
      
    } else {
      
    }
    
  }
  
}
