1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> Gen X
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg {fuel:853} : IVar Data.Fuel.Fuel)
    => ILocal (IApp. IVar <DerivedGen.X>[] $ IVar {fuel:853})
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.X>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar DerivedGen.X)))
         IDef <DerivedGen.X>[]
              [ PatClause (IApp. IVar <DerivedGen.X>[] $ IBindVar ^fuel_arg^)
                          (ILocal (ICase (IVar ^fuel_arg^)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_DerivedGen.X0:7}
                                                                        $ IVar Data.Fuel.Dry)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_DerivedGen.X1:7}
                                                                               $ IVar Data.Fuel.Dry)
                                                                        $ IVar Nil)))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar ^sub^fuel_arg^)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_DerivedGen.X0:7}
                                                                        $ IVar ^sub^fuel_arg^)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_DerivedGen.X1:7}
                                                                               $ IVar ^sub^fuel_arg^)
                                                                        $ (IApp. IVar ::
                                                                               $ (IApp. IVar {cons_gen_for_DerivedGen.X2:7}
                                                                                      $ IVar ^sub^fuel_arg^)
                                                                               $ IVar Nil)))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.X0:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar DerivedGen.X)))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.X1:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar DerivedGen.X)))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.X2:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar DerivedGen.X)))
                            IDef {cons_gen_for_DerivedGen.X0:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.X0:7}
                                                  $ IBindVar ^cons_fuel^)
                                             (IVar empty) ]
                            IDef {cons_gen_for_DerivedGen.X1:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.X1:7}
                                                  $ IBindVar ^cons_fuel^)
                                             (IVar empty) ]
                            IDef {cons_gen_for_DerivedGen.X2:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.X2:7}
                                                  $ IBindVar ^cons_fuel^)
                                             (IVar empty) ] ]
