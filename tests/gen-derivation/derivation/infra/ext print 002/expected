1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> {auto conArg : ((arg : Fuel) -> Gen String)} -> Gen XSS
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg {fuel:850} : IVar Data.Fuel.Fuel)
    => (MW AutoImplicit {externalAutoimpl:849} : IPi.  (MW ExplicitArg {arg:830} : IVar Data.Fuel.Fuel)
                                                    -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                            $ IPrimVal String))
    => ILocal (IApp. IVar <AlternativeCore.XSS>[] $ IVar {fuel:850})
         IClaim MW
                Export
                []
                (MkTy <AlternativeCore.XSS>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar AlternativeCore.XSS)))
         IDef <AlternativeCore.XSS>[]
              [ PatClause (IApp. IVar <AlternativeCore.XSS>[]
                               $ IBindVar fuel)
                          (IApp. IVar <*>
                               $ (IApp. IVar <$>
                                      $ IVar MkXSS
                                      $ (IApp. IVar {externalAutoimpl:849}
                                             $ IVar fuel))
                               $ (IApp. IVar {externalAutoimpl:849}
                                      $ IVar fuel)) ]
