1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> Gen ()
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg {fuel:832} : IVar Data.Fuel.Fuel)
    => ILocal (IApp. IVar <Builtin.Unit>[] $ IVar {fuel:832})
         IClaim MW
                Export
                []
                (MkTy <Builtin.Unit>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar Builtin.Unit)))
         IDef <Builtin.Unit>[]
              [ PatClause (IApp. IVar <Builtin.Unit>[] $ Implicit True)
                          (IVar empty) ]
