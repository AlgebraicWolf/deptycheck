1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> {auto conArg : ((arg : Fuel) -> Gen Nat)} -> Gen Bool
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg {fuel:832} : IVar Data.Fuel.Fuel)
    => (MW AutoImplicit {externalAutoimpl:831} : IPi.  (MW ExplicitArg {arg:812} : IVar Data.Fuel.Fuel)
                                                    -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                            $ IVar Prelude.Types.Nat))
    => ILocal (IApp. IVar {("Prelude.Basics.Bool", []):0} $ IVar {fuel:832})
         IClaim MW
                Export
                []
                (MkTy {("Prelude.Basics.Bool", []):0}
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar Prelude.Basics.Bool)))
         IDef {("Prelude.Basics.Bool", []):0}
              [ PatClause (IApp. IVar {("Prelude.Basics.Bool", []):0}
                               $ IBindVar fuel_arg_86)
                          (ILocal (ICase (IVar fuel_arg_86)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_Prelude.Basics.False:7}
                                                                        $ IVar Data.Fuel.Dry)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_Prelude.Basics.True:7}
                                                                               $ IVar Data.Fuel.Dry)
                                                                        $ IVar Nil)))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar sub_fuel_arg_86)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_Prelude.Basics.False:7}
                                                                        $ IVar sub_fuel_arg_86)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_Prelude.Basics.True:7}
                                                                               $ IVar sub_fuel_arg_86)
                                                                        $ IVar Nil))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_Prelude.Basics.False:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar Prelude.Basics.Bool)))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_Prelude.Basics.True:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar Prelude.Basics.Bool)))
                            IDef {cons_gen_for_Prelude.Basics.False:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_Prelude.Basics.False:7}
                                                  $ IBindVar fuel_cons_arg)
                                             (IVar empty) ]
                            IDef {cons_gen_for_Prelude.Basics.True:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_Prelude.Basics.True:7}
                                                  $ IBindVar fuel_cons_arg)
                                             (IVar empty) ] ]
