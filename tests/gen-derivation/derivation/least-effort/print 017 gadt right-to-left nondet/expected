1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> Gen Y
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg {fuel:877} : IVar Data.Fuel.Fuel)
    => ILocal (IApp. IVar {("DerivedGen.Y", []):0} $ IVar {fuel:877})
         IClaim MW
                Export
                []
                (MkTy {("Prelude.Types.Nat", []):0}
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar Prelude.Types.Nat)))
         IClaim MW
                Export
                []
                (MkTy {("DerivedGen.X_GADT", []):0}
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Types.Nat
                                         $ (ILam.  (MW ExplicitArg {arg:826} : IVar Prelude.Types.Nat)
                                                => (IApp. IVar Builtin.DPair.DPair
                                                        $ IVar Prelude.Types.Nat
                                                        $ (ILam.  (MW ExplicitArg {arg:829} : IVar Prelude.Types.Nat)
                                                               => (IApp. IVar DerivedGen.X_GADT
                                                                       $ IVar {arg:826}
                                                                       $ IVar {arg:829}))))))))
         IClaim MW
                Export
                []
                (MkTy {("DerivedGen.X_GADT", [0]):0}
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (MW ExplicitArg {arg:826} : IVar Prelude.Types.Nat)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Types.Nat
                                         $ (ILam.  (MW ExplicitArg {arg:829} : IVar Prelude.Types.Nat)
                                                => (IApp. IVar DerivedGen.X_GADT
                                                        $ IVar {arg:826}
                                                        $ IVar {arg:829}))))))
         IClaim MW
                Export
                []
                (MkTy {("DerivedGen.X_GADT", [1]):0}
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (MW ExplicitArg {arg:829} : IVar Prelude.Types.Nat)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Types.Nat
                                         $ (ILam.  (MW ExplicitArg {arg:826} : IVar Prelude.Types.Nat)
                                                => (IApp. IVar DerivedGen.X_GADT
                                                        $ IVar {arg:826}
                                                        $ IVar {arg:829}))))))
         IClaim MW
                Export
                []
                (MkTy {("DerivedGen.Y", []):0}
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar DerivedGen.Y)))
         IDef {("Prelude.Types.Nat", []):0}
              [ PatClause (IApp. IVar {("Prelude.Types.Nat", []):0}
                               $ IBindVar fuel_arg_86)
                          (ILocal (ICase (IVar fuel_arg_86)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_Prelude.Types.Z:7}
                                                                        $ IVar Data.Fuel.Dry)
                                                                 $ IVar Nil))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar sub_fuel_arg_86)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_Prelude.Types.Z:7}
                                                                        $ IVar sub_fuel_arg_86)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_Prelude.Types.S:7}
                                                                               $ IVar sub_fuel_arg_86)
                                                                        $ IVar Nil))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_Prelude.Types.Z:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar Prelude.Types.Nat)))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_Prelude.Types.S:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar Prelude.Types.Nat)))
                            IDef {cons_gen_for_Prelude.Types.Z:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_Prelude.Types.Z:7}
                                                  $ IBindVar fuel_cons_arg)
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                  $ (IApp. IVar ::
                                                         $ (IApp. (INamedApp. IVar Prelude.pure
                                                                            $ IVar Test.DepTyCheck.Gen.Gen)
                                                                $ IVar Prelude.Types.Z)
                                                         $ IVar Nil)) ]
                            IDef {cons_gen_for_Prelude.Types.S:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_Prelude.Types.S:7}
                                                  $ IBindVar fuel_cons_arg)
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                  $ (IApp. IVar ::
                                                         $ (IApp. IVar >>=
                                                                $ (IApp. IVar {("Prelude.Types.Nat", []):0}
                                                                       $ IVar fuel_cons_arg)
                                                                $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                       => ICase (IVar {lamc:0})
                                                                                (Implicit False)
                                                                                [ PatClause (IBindVar __bnd_{arg:682})
                                                                                            (IApp. (INamedApp. IVar Prelude.pure
                                                                                                             $ IVar Test.DepTyCheck.Gen.Gen)
                                                                                                 $ (IApp. IVar Prelude.Types.S
                                                                                                        $ IVar __bnd_{arg:682})) ]))
                                                         $ IVar Nil)) ] ]
         IDef {("DerivedGen.X_GADT", []):0}
              [ PatClause (IApp. IVar {("DerivedGen.X_GADT", []):0}
                               $ IBindVar fuel_arg_86)
                          (ILocal (ICase (IVar fuel_arg_86)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                                        $ IVar Data.Fuel.Dry)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_5:7}
                                                                               $ IVar Data.Fuel.Dry)
                                                                        $ IVar Nil)))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar sub_fuel_arg_86)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                                        $ IVar sub_fuel_arg_86)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_5:7}
                                                                               $ IVar sub_fuel_arg_86)
                                                                        $ IVar Nil))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.MkXG_4:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:826} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar Builtin.DPair.DPair
                                                                           $ IVar Prelude.Types.Nat
                                                                           $ (ILam.  (MW ExplicitArg {arg:829} : IVar Prelude.Types.Nat)
                                                                                  => (IApp. IVar DerivedGen.X_GADT
                                                                                          $ IVar {arg:826}
                                                                                          $ IVar {arg:829}))))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.MkXG_5:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:826} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar Builtin.DPair.DPair
                                                                           $ IVar Prelude.Types.Nat
                                                                           $ (ILam.  (MW ExplicitArg {arg:829} : IVar Prelude.Types.Nat)
                                                                                  => (IApp. IVar DerivedGen.X_GADT
                                                                                          $ IVar {arg:826}
                                                                                          $ IVar {arg:829}))))))))
                            IDef {cons_gen_for_DerivedGen.MkXG_4:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                  $ IBindVar fuel_cons_arg)
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                  $ (IApp. IVar ::
                                                         $ (IApp. (INamedApp. IVar Prelude.pure
                                                                            $ IVar Test.DepTyCheck.Gen.Gen)
                                                                $ (IApp. IVar Builtin.DPair.MkDPair
                                                                       $ Implicit True
                                                                       $ (IApp. IVar Builtin.DPair.MkDPair
                                                                              $ Implicit True
                                                                              $ IVar DerivedGen.MkXG_4)))
                                                         $ IVar Nil)) ]
                            IDef {cons_gen_for_DerivedGen.MkXG_5:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkXG_5:7}
                                                  $ IBindVar fuel_cons_arg)
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                  $ (IApp. IVar ::
                                                         $ (IApp. IVar >>=
                                                                $ (IApp. IVar {("Prelude.Types.Nat", []):0}
                                                                       $ IVar fuel_cons_arg)
                                                                $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                       => ICase (IVar {lamc:0})
                                                                                (Implicit False)
                                                                                [ PatClause (IBindVar m)
                                                                                            (IApp. (INamedApp. IVar Prelude.pure
                                                                                                             $ IVar Test.DepTyCheck.Gen.Gen)
                                                                                                 $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                                        $ Implicit True
                                                                                                        $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                                               $ Implicit True
                                                                                                               $ (INamedApp. IVar DerivedGen.MkXG_5
                                                                                                                           $ IVar m)))) ]))
                                                         $ IVar Nil)) ] ]
         IDef {("DerivedGen.X_GADT", [0]):0}
              [ PatClause (IApp. IVar {("DerivedGen.X_GADT", [0]):0}
                               $ IBindVar fuel_arg_86
                               $ IBindVar {arg:826})
                          (ILocal (ICase (IVar fuel_arg_86)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                                        $ IVar Data.Fuel.Dry
                                                                        $ IVar {arg:826})
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_5:7}
                                                                               $ IVar Data.Fuel.Dry
                                                                               $ IVar {arg:826})
                                                                        $ IVar Nil)))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar sub_fuel_arg_86)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                                        $ IVar sub_fuel_arg_86
                                                                        $ IVar {arg:826})
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_5:7}
                                                                               $ IVar sub_fuel_arg_86
                                                                               $ IVar {arg:826})
                                                                        $ IVar Nil))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.MkXG_4:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:826} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:829} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_GADT
                                                                           $ IVar {arg:826}
                                                                           $ IVar {arg:829}))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.MkXG_5:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:826} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:829} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_GADT
                                                                           $ IVar {arg:826}
                                                                           $ IVar {arg:829}))))))
                            IDef {cons_gen_for_DerivedGen.MkXG_4:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                  $ IBindVar fuel_cons_arg
                                                  $ (IApp. IVar Prelude.Types.S
                                                         $ (IApp. IVar Prelude.Types.S
                                                                $ (IApp. IVar Prelude.Types.S
                                                                       $ (IApp. IVar Prelude.Types.S
                                                                              $ IVar Prelude.Types.Z)))))
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                  $ (IApp. IVar ::
                                                         $ (IApp. (INamedApp. IVar Prelude.pure
                                                                            $ IVar Test.DepTyCheck.Gen.Gen)
                                                                $ (IApp. IVar Builtin.DPair.MkDPair
                                                                       $ Implicit True
                                                                       $ IVar DerivedGen.MkXG_4))
                                                         $ IVar Nil))
                                 , PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ]
                            IDef {cons_gen_for_DerivedGen.MkXG_5:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkXG_5:7}
                                                  $ IBindVar fuel_cons_arg
                                                  $ (IApp. IVar Prelude.Types.S
                                                         $ (IApp. IVar Prelude.Types.S
                                                                $ (IApp. IVar Prelude.Types.S
                                                                       $ (IApp. IVar Prelude.Types.S
                                                                              $ (IApp. IVar Prelude.Types.S
                                                                                     $ IVar Prelude.Types.Z))))))
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                  $ (IApp. IVar ::
                                                         $ (IApp. IVar >>=
                                                                $ (IApp. IVar {("Prelude.Types.Nat", []):0}
                                                                       $ IVar fuel_cons_arg)
                                                                $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                       => ICase (IVar {lamc:0})
                                                                                (Implicit False)
                                                                                [ PatClause (IBindVar m)
                                                                                            (IApp. (INamedApp. IVar Prelude.pure
                                                                                                             $ IVar Test.DepTyCheck.Gen.Gen)
                                                                                                 $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                                        $ Implicit True
                                                                                                        $ (INamedApp. IVar DerivedGen.MkXG_5
                                                                                                                    $ IVar m))) ]))
                                                         $ IVar Nil))
                                 , PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkXG_5:7}
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ] ]
         IDef {("DerivedGen.X_GADT", [1]):0}
              [ PatClause (IApp. IVar {("DerivedGen.X_GADT", [1]):0}
                               $ IBindVar fuel_arg_86
                               $ IBindVar {arg:829})
                          (ILocal (ICase (IVar fuel_arg_86)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                                        $ IVar Data.Fuel.Dry
                                                                        $ IVar {arg:829})
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_5:7}
                                                                               $ IVar Data.Fuel.Dry
                                                                               $ IVar {arg:829})
                                                                        $ IVar Nil)))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar sub_fuel_arg_86)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                                        $ IVar sub_fuel_arg_86
                                                                        $ IVar {arg:829})
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_DerivedGen.MkXG_5:7}
                                                                               $ IVar sub_fuel_arg_86
                                                                               $ IVar {arg:829})
                                                                        $ IVar Nil))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.MkXG_4:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:829} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:826} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_GADT
                                                                           $ IVar {arg:826}
                                                                           $ IVar {arg:829}))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.MkXG_5:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:829} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:826} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_GADT
                                                                           $ IVar {arg:826}
                                                                           $ IVar {arg:829}))))))
                            IDef {cons_gen_for_DerivedGen.MkXG_4:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                  $ IBindVar fuel_cons_arg
                                                  $ (IApp. IVar Prelude.Types.S
                                                         $ (IApp. IVar Prelude.Types.S
                                                                $ (IApp. IVar Prelude.Types.S
                                                                       $ (IApp. IVar Prelude.Types.S
                                                                              $ (IApp. IVar Prelude.Types.S
                                                                                     $ IVar Prelude.Types.Z))))))
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                  $ (IApp. IVar ::
                                                         $ (IApp. (INamedApp. IVar Prelude.pure
                                                                            $ IVar Test.DepTyCheck.Gen.Gen)
                                                                $ (IApp. IVar Builtin.DPair.MkDPair
                                                                       $ Implicit True
                                                                       $ IVar DerivedGen.MkXG_4))
                                                         $ IVar Nil))
                                 , PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkXG_4:7}
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ]
                            IDef {cons_gen_for_DerivedGen.MkXG_5:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkXG_5:7}
                                                  $ IBindVar fuel_cons_arg
                                                  $ IBindVar m)
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                  $ (IApp. IVar ::
                                                         $ (IApp. (INamedApp. IVar Prelude.pure
                                                                            $ IVar Test.DepTyCheck.Gen.Gen)
                                                                $ (IApp. IVar Builtin.DPair.MkDPair
                                                                       $ Implicit True
                                                                       $ (INamedApp. IVar DerivedGen.MkXG_5
                                                                                   $ IVar m)))
                                                         $ IVar Nil)) ] ]
         IDef {("DerivedGen.Y", []):0}
              [ PatClause (IApp. IVar {("DerivedGen.Y", []):0}
                               $ IBindVar fuel_arg_86)
                          (ILocal (ICase (IVar fuel_arg_86)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_DerivedGen.MkY1:7}
                                                                        $ IVar Data.Fuel.Dry)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_DerivedGen.MkY2:7}
                                                                               $ IVar Data.Fuel.Dry)
                                                                        $ IVar Nil)))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar sub_fuel_arg_86)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar {cons_gen_for_DerivedGen.MkY1:7}
                                                                        $ IVar sub_fuel_arg_86)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar {cons_gen_for_DerivedGen.MkY2:7}
                                                                               $ IVar sub_fuel_arg_86)
                                                                        $ IVar Nil))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.MkY1:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar DerivedGen.Y)))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy {cons_gen_for_DerivedGen.MkY2:7}
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar DerivedGen.Y)))
                            IDef {cons_gen_for_DerivedGen.MkY1:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkY1:7}
                                                  $ IBindVar fuel_cons_arg)
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                  $ (IApp. IVar ::
                                                         $ (IApp. IVar >>=
                                                                $ (IApp. IVar {("DerivedGen.X_GADT", []):0}
                                                                       $ IVar fuel_cons_arg)
                                                                $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                       => ICase (IVar {lamc:0})
                                                                                (Implicit False)
                                                                                [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                                 $ IBindVar n
                                                                                                 $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                                        $ IBindVar k
                                                                                                        $ IBindVar __bnd_{arg:856}))
                                                                                            (IApp. IVar >>=
                                                                                                 $ (IApp. IVar {("DerivedGen.X_GADT", [0]):0}
                                                                                                        $ IVar fuel_cons_arg
                                                                                                        $ IVar n)
                                                                                                 $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                                                        => ICase (IVar {lamc:0})
                                                                                                                 (Implicit False)
                                                                                                                 [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                                                                  $ IBindVar m
                                                                                                                                  $ IBindVar __bnd_{arg:853})
                                                                                                                             (IApp. (INamedApp. IVar Prelude.pure
                                                                                                                                              $ IVar Test.DepTyCheck.Gen.Gen)
                                                                                                                                  $ (IApp. (INamedApp. IVar DerivedGen.MkY1
                                                                                                                                                     $ IVar k
                                                                                                                                                     $ IVar m
                                                                                                                                                     $ IVar n)
                                                                                                                                         $ IVar __bnd_{arg:853}
                                                                                                                                         $ IVar __bnd_{arg:856})) ])) ]))
                                                         $ IVar Nil)) ]
                            IDef {cons_gen_for_DerivedGen.MkY2:7}
                                 [ PatClause (IApp. IVar {cons_gen_for_DerivedGen.MkY2:7}
                                                  $ IBindVar fuel_cons_arg)
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf'
                                                  $ (IApp. IVar ::
                                                         $ (IApp. IVar >>=
                                                                $ (IApp. IVar {("DerivedGen.X_GADT", []):0}
                                                                       $ IVar fuel_cons_arg)
                                                                $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                       => ICase (IVar {lamc:0})
                                                                                (Implicit False)
                                                                                [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                                 $ IBindVar k
                                                                                                 $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                                        $ IBindVar m
                                                                                                        $ IBindVar __bnd_{arg:865}))
                                                                                            (IApp. IVar >>=
                                                                                                 $ (IApp. IVar {("DerivedGen.X_GADT", [1]):0}
                                                                                                        $ IVar fuel_cons_arg
                                                                                                        $ IVar m)
                                                                                                 $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                                                        => ICase (IVar {lamc:0})
                                                                                                                 (Implicit False)
                                                                                                                 [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                                                                  $ IBindVar n
                                                                                                                                  $ IBindVar __bnd_{arg:862})
                                                                                                                             (IApp. (INamedApp. IVar Prelude.pure
                                                                                                                                              $ IVar Test.DepTyCheck.Gen.Gen)
                                                                                                                                  $ (IApp. (INamedApp. IVar DerivedGen.MkY2
                                                                                                                                                     $ IVar k
                                                                                                                                                     $ IVar m
                                                                                                                                                     $ IVar n)
                                                                                                                                         $ IVar __bnd_{arg:862}
                                                                                                                                         $ IVar __bnd_{arg:865})) ])) ]))
                                                         $ IVar Nil)) ] ]
