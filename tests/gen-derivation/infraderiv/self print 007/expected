1/2: Building AlternativeCore (AlternativeCore.idr)
2/2: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: 
ILocal (ILam.  (MW ExplicitArg {fuel:1211} : IVar Data.Fuel.Fuel)
            => (IApp. IVar {("DerivedGen.X", []):0} $ IVar {fuel:1211}))
  IClaim MW
         Export
         []
         (MkTy {("DerivedGen.X", []):0}
               (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                   -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                           $ (IApp. IVar Builtin.DPair.DPair
                                  $ IVar Prelude.Types.Nat
                                  $ (ILam.  (MW ExplicitArg {arg:1197} : IVar Prelude.Types.Nat)
                                         => (IApp. IVar Builtin.DPair.DPair
                                                 $ IVar Prelude.Basics.Bool
                                                 $ (ILam.  (MW ExplicitArg {arg:1198} : IVar Prelude.Basics.Bool)
                                                        => (IApp. IVar DerivedGen.X
                                                                $ IVar {arg:1197}
                                                                $ IVar {arg:1198}))))))))
  IDef {("DerivedGen.X", []):0}
       [ PatClause (IApp. IVar {("DerivedGen.X", []):0} $ IVar Dry) (IVar empty)
       , PatClause (IApp. IVar {("DerivedGen.X", []):0}
                        $ (IApp. IVar More $ IBindVar fuel))
                   (IApp. IVar {("DerivedGen.X", []):0} $ IVar fuel) ]
