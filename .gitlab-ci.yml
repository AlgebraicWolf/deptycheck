variables:
  GIT_SUBMODULE_STRATEGY: recursive
  IDRIS_VERSION_FILE: .idris-version # should contain the result of `git describe --tags`

read-idris-ver:
  stage: .pre
  script:
    - IDRIS2_TAG="$( if [[ "$CI_PIPELINE_SOURCE" != "schedule" ]]; then cat "${IDRIS_VERSION_FILE}"; else echo "latest"; fi )"
    - echo "IDRIS2_TAG=$IDRIS2_TAG" > idris.env
  artifacts:
    reports:
      dotenv: idris.env

.depends-on-idris:
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/snazzybucket/idris2:${IDRIS2_TAG}

.idris-build-job:
  artifacts:
    paths:
      - "**/build/**/*.tt[cm]"
    expire_in: 3 hrs

stages:
  - thirdparties:build
  - lint
  - deptycheck:build
  - deptycheck:docs
  - deptycheck:install
  - deptycheck:test:lib
  - deptycheck:test:docs
  - deptycheck:test:derive
  - pil:build
  - pil:test

# TODO to find a way to not to repeat `read-idris-ver` in `needs` for every job that extends `.depends-on-idris`.

thirdparties:build:
  extends:
    - .depends-on-idris
    - .idris-build-job
  stage: thirdparties:build
  needs:
    - read-idris-ver
  script:
    - make thirdparties

deptycheck:build:
  extends:
    - .depends-on-idris
    - .idris-build-job
  stage: deptycheck:build
  needs:
    - read-idris-ver
    - thirdparties:build
  script:
    - make deptycheck

deptycheck:docs:
  stage: deptycheck:docs
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/sphinxdoc/sphinx:latest
  needs: []
  script:
    - pip3 install -r docs/requirements.txt
    - make docs

deptycheck:install:after_build:
  extends: .depends-on-idris
  stage: deptycheck:install
  needs:
    - read-idris-ver
    - deptycheck:build
  script:
    - make install
    - make test-installation

deptycheck:install:clean:
  extends: .depends-on-idris
  stage: deptycheck:install
  needs:
    - read-idris-ver
  script:
    - make install
    - make test-installation

deptycheck:test:lib:
  extends: .depends-on-idris
  stage: deptycheck:test:lib
  needs:
    - read-idris-ver
    - deptycheck:build
  script:
    - make test-deptycheck only=lib/ INTERACTIVE="--color"

deptycheck:test:docs:
  extends: .depends-on-idris
  stage: deptycheck:test:docs
  needs:
    - read-idris-ver
    - deptycheck:build
  script:
    - make test-deptycheck only=docs/ INTERACTIVE="--color"

deptycheck:test:derive:
  extends: .depends-on-idris
  stage: deptycheck:test:derive
  needs:
    - read-idris-ver
    - deptycheck:build
    - deptycheck:test:lib
  only:
    changes:
      - "*"
      - src/**/*
      - tests/*
      - tests/gen-derivation/**/*
      - thirdparty/**/*
      - depends/**/*
  parallel:
    matrix:
      - test_set:
        - inputvalidation/
        - up-to-renaming-ttimp-eq/
        - canonicsig/
        - cons-analysis/
        - derivation/infra/
        - arg-deps/
        - derivation/least-effort/print
        - derivation/least-effort/run
        - derivation/core/
  script:
    - make test-deptycheck only=gen-derivation/"$test_set" INTERACTIVE="--color" threads=2

pil:build:
  extends:
    - .depends-on-idris
    - .idris-build-job
  stage: pil:build
  needs:
    - read-idris-ver
    - deptycheck:build
  script:
    - make pil

pil:test:
  extends: .depends-on-idris
  stage: pil:test
  needs:
    - read-idris-ver
    - pil:build
    - deptycheck:test:lib
  script:
    - make test-pil INTERACTIVE="--color"

include:
  - remote: 'https://jobs.r2devops.io/latest/super_linter.yml'

super_linter:
  stage: lint
  needs: []
  image:
    name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/github/super-linter:slim-v4
  variables:
    FILTER_REGEX_EXCLUDE: ".*/thirdparty/.*"
    VALIDATE_JSCPD_ALL_CODEBASE: "true"
